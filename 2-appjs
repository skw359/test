import "../styles/globals.css";
import outputs from "../../amplify_outputs.json";
import { Authenticator } from '@aws-amplify/ui-react';
import '@aws-amplify/ui-react/styles.css';
import { Amplify } from "aws-amplify";
import Layout from '../../components/shared/layout';
import ProfileButton from '../../components/shared/ProfileButton';
import styles from '../styles/_app.module.css';
import React, { useState, useEffect} from 'react';

Amplify.configure(outputs);

export default function App({ Component, pageProps }) {
  return (
    <Layout>
      <Authenticator>
        {({ signOut }) => (
          <>
            <nav className={styles.navbar}>
              <div className={styles.navTitle}>Velocity</div>
              <ProfileButton signOut={signOut} />
            </nav>
            <div className={styles.pageContent}>
              <Component {...pageProps} /> 
            </div>
          </>
        )}
      </Authenticator>
    </Layout>
  );
}


 âœ“ Compiled /chat in 2.2s
Client: {
  graphql: [Function: graphql],
  cancel: [Function (anonymous)],
  isCancelError: [Function: isCancelError],
  models: {
    Message: {
      create: [Function: get],
      get: [Function: get],
      update: [Function: get],
      delete: [Function: get],
      list: [Function: list],
      '': [Function: get],
      onCreate: [Function: subscription],
      onUpdate: [Function: subscription],
      onDelete: [Function: subscription],
      observeQuery: [Function: observeQuery],
      listMessageByOwnerAndTimestamp: [Function: indexQuery],
      listMessageByReceiverAndTimestamp: [Function: indexQuery]
    }
  },
  enums: {},
  queries: {},
  mutations: {},
  subscriptions: {},
  conversations: {},
  generations: {},
  [Symbol(amplify)]: AmplifyClass {
    oAuthListener: undefined,
    resourcesConfig: { Auth: [Object], Geo: [Object], API: [Object] },
    libraryOptions: { Auth: [Object] },
    Auth: AuthClass { authConfig: [Object], authOptions: [Object] }
  },
  [Symbol(authMode)]: undefined,
  [Symbol(authToken)]: undefined,
  [Symbol(apiKey)]: undefined,
  [Symbol(endpoint)]: undefined,
  [Symbol(headers)]: undefined
}
Client models: {
  Message: {
    create: [Function: get],
    get: [Function: get],
    update: [Function: get],
    delete: [Function: get],
    list: [Function: list],
    '': [Function: get],
    onCreate: [Function: subscription],
    onUpdate: [Function: subscription],
    onDelete: [Function: subscription],
    observeQuery: [Function: observeQuery],
    listMessageByOwnerAndTimestamp: [Function: indexQuery],
    listMessageByReceiverAndTimestamp: [Function: indexQuery]
  }
}
Available models: [ 'Message' ]
