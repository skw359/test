'use client';

import { useState, useEffect } from 'react';
import { useRouter } from 'next/router';
import Head from 'next/head';
import styles from '../styles/register.module.css';

export default function RegisterPage() {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [confirmPassword, setConfirmPassword] = useState('');
  const [errorMessage, setErrorMessage] = useState('');
  const [fadeIn, setFadeIn] = useState(false);
  const router = useRouter();

  useEffect(() => {
    setFadeIn(true);
  }, []);

  const handleRegister = async (event) => {
    event.preventDefault();
    setErrorMessage('');

    if (!username.trim()) {
      setErrorMessage('Username/Email is required.');
      return;
    }

    if (password.length < 6) {
      setErrorMessage('Password must be at least 6 characters long.');
      return;
    }

    if (password !== confirmPassword) {
      setErrorMessage('Passwords do not match.');
      return;
    }

    console.log('Registration attempt:', { username, password });
    
    alert('Registration successful!');
    router.push('/login');
  };

  const handleLoginClick = () => {
    router.push('/login');
  };

  return (
    <>
      <Head>
        <title>Register - Create Account</title>
        <link rel="icon" href="/favicon.ico" />
        <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300;400;600&display=swap" rel="stylesheet" />
      </Head>

      <div className={styles.registerPage}>
        <div className={`${styles.container} ${fadeIn ? styles.fadeIn : ''}`}>
          <div className={`${styles.errorMessage} ${errorMessage ? styles.show : ''}`}>
            <div className={styles.errorLabel}>ERROR</div>
            <div className={styles.errorText}>{errorMessage}</div>
          </div>
          
          <div className={styles.registerContainer}>
            <div className={styles.registerContainerInner}>
              <h1>Create New Account</h1>
              
              <form onSubmit={handleRegister}>
                <input
                  type="text"
                  name="username"
                  placeholder="Email/Username"
                  required
                  value={username}
                  onChange={(e) => setUsername(e.target.value)}
                  className={styles.input}
                />
                <input
                  type="password"
                  name="password"
                  placeholder="Password"
                  required
                  value={password}
                  onChange={(e) => setPassword(e.target.value)}
                  className={styles.input}
                />
                <input
                  type="password"
                  name="confirmPassword"
                  placeholder="Confirm Password"
                  required
                  value={confirmPassword}
                  onChange={(e) => setConfirmPassword(e.target.value)}
                  className={styles.input}
                />
                <button
                  type="submit"
                  className={styles.registerButton}
                >
                  Register
                </button>
              </form>
              
              <p className={styles.loginElement}>
                Already have an account? <span className={styles.loginLink} onClick={handleLoginClick}>Sign in</span>.
              </p>
            </div>
          </div>
        </div>
      </div>
    </>
  );
}

.registerPage {
  margin: 0;
  padding: 0;
  font-family: Arial, sans-serif;
  background-color: black;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100vh;
  min-height: 100vh;
}

.container {
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.25s ease-out;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
}

.container.fadeIn {
  opacity: 1;
  visibility: visible;
}

.registerContainer {
  position: relative;
  width: 700px;
  background: linear-gradient(to right, #fba83f, #ef4837);
  padding: 3px;
  border-radius: 20px;
  box-shadow: 0 0 0px rgba(0, 0, 0, 0.1);
  display: flex;
  flex-direction: column;
  align-items: center;
}

.registerContainerInner {
  background-color: black;
  width: 100%;
  padding: 40px;
  border-radius: 20px;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  align-items: center;
  position: relative;
}

.registerContainer h1 {
  text-align: center;
  width: 100%;
  margin-bottom: 30px;
  font-family: 'Montserrat', sans-serif;
  font-weight: 600;
  color: white;
  font-size: 24px;
}

.input {
  width: calc(100% - 30px);
  padding: 15px;
  margin-bottom: 15px;
  border: 1px solid #444;
  border-radius: 5px;
  box-sizing: border-box;
  font-family: 'Montserrat', sans-serif;
  font-weight: 300;
  background-color: black;
  color: white;
  transition: border 0.3s ease, box-shadow 0.3s ease;
}

.input::placeholder {
  color: #888;
}

.input:focus {
  outline: none;
  border: 1px solid #f7863c;
  box-shadow: 0 0 5px #f7863c;
}

.registerButton {
  width: calc(100% - 30px);
  padding: 15px;
  border: none;
  border-radius: 5px;
  background: linear-gradient(to right, #fba83f, #ef4837);
  color: white;
  cursor: pointer;
  font-family: 'Montserrat', sans-serif;
  font-weight: bold;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  transition: opacity 0.3s ease;
  margin-top: 10px;
}

.registerButton:hover {
  opacity: 0.6;
}

.errorMessage {
  max-width: 600px;
  display: none;
  align-items: center;
  justify-content: center;
  position: relative;
  background-color: #e02424;
  color: white;
  width: 100%;
  text-align: center;
  padding: 10px;
  padding-right: 20px;
  box-sizing: border-box;
  border-radius: 5px;
  margin-bottom: 20px;
  font-family: 'Montserrat', sans-serif;
}

.errorMessage.show {
  display: flex;
}

.errorLabel {
  margin-right: 20px;
  background-color: #8a0100;
  color: white;
  padding: 5px 15px;
  position: absolute;
  left: 20px;
  top: 50%;
  transform: translateY(-50%);
  font-weight: bold;
  border-radius: 5px;
}

.errorText {
  flex-grow: 1;
  text-align: center;
  padding-left: 60px;
}

.loginElement {
  margin-top: 15px;
  margin-bottom: -10px;
  font-size: 12px;
  text-align: center;
  font-family: 'Montserrat', sans-serif;
  font-weight: 300;
  color: #ccc;
  width: calc(100% - 30px); 
}

.loginLink {
  color: #f7863c;
  text-decoration: none;
  cursor: pointer;
  transition: color 0.3s ease;
}

.loginLink:hover {
  color: #ef4837;
}

html, body {
  height: 100%;
  margin: 0;
}
